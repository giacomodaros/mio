.lineheight {#3498d1
  line-height: 1.5em;
}

/* Define light and dark theme colors */
:root {
  --background-light: #f7f7f7;
  --text-light: #000000;
  --link-light: #3498d1;
  --hover-light: grey;
  --active-light: grey;

  --background-dark: #1a1a1a;
  --text-dark: #ffffff;
  --link-dark: ;
  --hover-dark: grey;
  --active-dark: grey;
}

html {
  padding-left: 7.5%;
  padding-right: 7.5%;
  background-color: var(--background-light);
  transition: background-color 0.3s;
}

body {
  margin-top: 10%;
  margin-bottom: 10%;
  margin-left: auto;
  margin-right: auto;
  max-width: 800px;
  font-size: 1.3rem;
  text-align: left;
  font-family: 'Rubik', 'Helvetica', sans-serif;
  color: var(--text-light);
  transition: color 0.3s;
}

@media (min-width: 600px) {
  body {
    text-align: justify;
  }
}

/* Apply dark theme colors when user's system prefers a dark color scheme */
@media (prefers-color-scheme: dark) {
  html {
    background-color: var(--background-dark);
  }
  body {
    color: var(--text-dark);
  }
}

/* Apply dark theme colors when the 'dark-mode' class is added to the body */
html.dark-mode {
  background-color: var(--background-dark);
}
body.dark-mode {
  color: var(--text-dark);
}

section h1 {
  text-align: left;
  font-family: 'Rubik', 'Helvetica', sans-serif;
  line-height: 300%;
}

section h2 {
  text-align: left;
  font-size: 3rem;
  font-family: 'Rubik', 'Helvetica', sans-serif;
}

img {
  display: block;
  width: auto;
  height: auto;
  max-height: 700px;
  max-width: 90%;
  margin-left: auto;
  margin-right: auto;
  align-items: center;
}

/* unvisited link */
a:link {
  color: var(--link-light);
  text-decoration: none;
}

/* visited link */
a:visited {
  color: var(--link-light);
  text-decoration: none;
}

/* mouse over link */
a:hover {
  color: var(--hover-light);
  text-decoration: none;
}

/* selected link */
a:active {
  color: var(--active-light);
  text-decoration: none;
}

/* Apply dark theme colors for links */
body.dark-mode a:link,
body.dark-mode a:visited {
  color: var(--link-dark);
}

body.dark-mode a:hover {
  color: var(--hover-dark);
}

body.dark-mode a:active {
  color: var(--active-dark);
}

/* Define a container for the grid of images and enable CSS Grid */
.responsive-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* initially aim for at least 300px per image */
  grid-gap: 10px; 
  justify-items: center; /* Center grid items horizontally */
  align-items: center; /* Center grid items vertically */
}

/* By default (on mobile), display the images in one column */
.responsive-grid {
  grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));
}

/* On viewports that are at least 600px wide (tablets), display the images in 3 columns */
@media (min-width: 600px) {
  .responsive-grid {
    grid-template-columns: repeat(auto-fill, minmax(33.33%, 1fr));
  }
}

/* On viewports that are at least 900px wide (desktops), display the images in 4 columns */
@media (min-width: 900px) {
  .responsive-grid {
    grid-template-columns: repeat(auto-fill, minmax(25%, 1fr));
  }
}


/* Style for the images */
.responsive-image {
  width: 100%;
  height: auto;
  object-fit: cover;
}

form {
  background-color: #f2f2f2; /* Light grey background */
  padding: 20px;
  border-radius: 15px; /* Rounded corners */
  margin-bottom: 20px; /* Space below the form */
  display: flex; /* Makes the form a flex container */
  flex-direction: column; /* Stacks children vertically */
  gap: 10px; /* Space between elements inside the form */
}

.input-group {
  display: flex; /* Align items in a row */
  width: 100%; /* Ensures the group takes full width of the form */
}

form input[type="text"],
form input[type="email"] {
  flex-grow: 1; /* Allows input to grow and fill available space */
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 10px;
  font-family: 'Rubik', sans-serif;
  font-size: 0.8rem; /* Ensuring Rubik font for consistency */
}

.text-button {
  background-color: transparent; /* No background for the button */
  border: none; /* No border */
  color: var(--link-light); /* Inherits color from the root variable */
  cursor: pointer;
  font-family: 'Rubik', sans-serif;
  font-size: 1rem; /* Rubik font for consistency */
  padding: 10px; /* Vertical padding to align with input height */
  text-decoration: none; /* No underline to appear as plain text */
}

.text-button:hover {
  text-decoration: underline; /* Adds underline on hover to indicate clickability */
}

/* Focus styles for better accessibility */
input:focus,
.text-button:focus {
  outline: 2px solid var(--link-light); /* Highlight focus */
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  form {
    background-color: #404042; /* Dark grey background for the form */
  }

  form input[type="text"],
  form input[type="email"] {
    background-color: #131314; /* Black background for input fields */
    color: var(--text-dark); /* Ensure text color is white or light for dark mode */
    border-color: #555; /* Darker border for input fields for better visibility */
  }

  /* Adjusting the text button to have a lighter color for visibility */
  .text-button {
    color: #3498d1;
  }
}

/* If you are using a class to toggle dark mode, add similar rules under a .dark-mode class */
body.dark-mode form {
  background-color: var(--background-dark);
}

body.dark-mode form input[type="text"],
body.dark-mode form input[type="email"] {
  background-color: #000;
  color: var(--text-dark);
  border-color: #555;
}

body.dark-mode .text-button {
  color: var(--text-dark);
}
